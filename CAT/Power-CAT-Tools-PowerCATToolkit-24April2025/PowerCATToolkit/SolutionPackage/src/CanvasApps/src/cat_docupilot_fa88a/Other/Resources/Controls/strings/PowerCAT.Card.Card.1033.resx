<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Card_Display_Key" xml:space="preserve">
    <value>Fluent Card (1.1.39) Preview</value>
    <comment>The display name for the Card control.</comment>
  </data>
  <data name="Card_Description_Key" xml:space="preserve">
    <value>Provides a customizable card view for various purposes.</value>
    <comment>Description of the Card control's purpose and functionality.</comment>
  </data>
  <data name="Card_Title_Display_Key" xml:space="preserve">
    <value>Title</value>
    <comment>The display name for the Card's Title property.</comment>
  </data>
  <data name="Card_Subtitle_Display_Key" xml:space="preserve">
    <value>Subtitle</value>
    <comment>The display name for the Card's SubTitle property.</comment>
  </data>
  <data name="Card_Description_Display_Key" xml:space="preserve">
    <value>Description</value>
    <comment>The display name for the Card's Description property.</comment>
  </data>
  <data name="Card_HeaderImage_Display_Key" xml:space="preserve">
    <value>Header Image</value>
    <comment>The display name for the Card's HeaderImage property.</comment>
  </data>
  <data name="Card_Image_Display_Key" xml:space="preserve">
    <value>Image</value>
    <comment>The display name for the Card's Image property.</comment>
  </data>
  <data name="Card_Appearance_Display_Key" xml:space="preserve">
    <value>Appearance</value>
    <comment>The display name for the Card's Appearance property.</comment>
  </data>
  <data name="Card_Appearance_Desc_Key" xml:space="preserve">
    <value>Defines the visual style of the card (e.g., Filled, Outline).</value>
    <comment>Description for the Card's Appearance property.</comment>
  </data>
  <data name="Card_Appearance_Filled" xml:space="preserve">
    <value>Filled</value>
    <comment>Appearance option: Filled style.</comment>
  </data>
  <data name="Card_Appearance_FilledAlternative" xml:space="preserve">
    <value>Filled Alternative</value>
    <comment>Appearance option: Alternative filled style.</comment>
  </data>
  <data name="Card_Appearance_Outline" xml:space="preserve">
    <value>Outline</value>
    <comment>Appearance option: Outline style.</comment>
  </data>
  <data name="Card_Appearance_Subtle" xml:space="preserve">
    <value>Subtle</value>
    <comment>Appearance option: Subtle style.</comment>
  </data>
  <data name="Card_AccessibleLabel_Display_Key" xml:space="preserve">
    <value>Accessible Label</value>
    <comment>The display name for the Card's AccessibleLabel property.</comment>
  </data>
  <data name="Card_AccessibleLabel_Desc_Key" xml:space="preserve">
    <value>Provides an accessible label for screen readers.</value>
    <comment>Description for the Card's AccessibleLabel property.</comment>
  </data>
  <data name="Card_ImagePlacement_Display_Key" xml:space="preserve">
    <value>Image Placement</value>
    <comment>The display name for the Card's ImagePlacement property.</comment>
  </data>
  <data name="Card_ImagePlacement_Desc_Key" xml:space="preserve">
    <value>Specifies where the preview will be shown (Header or Body).</value>
    <comment>Description for the Card's ImagePlacement property.</comment>
  </data>
  <data name="Card_ImagePlacement_AboveHeader" xml:space="preserve">
    <value>Above Header</value>
    <comment>Place preview in the above header section.</comment>
  </data>
  <data name="Card_ImagePlacement_BelowHeader" xml:space="preserve">
    <value>Below Header</value>
    <comment>Place preview in the below header section.</comment>
  </data>
  <data name="Card_Size_Display_Key" xml:space="preserve">
    <value>Size</value>
    <comment>The display name for the Card's Size property.</comment>
  </data>
  <data name="Card_Size_Desc_Key" xml:space="preserve">
    <value>Specifies the size of the card (Small, Medium, Large).</value>
    <comment>Description for the Card's Size property.</comment>
  </data>
  <data name="Card_Size_Small" xml:space="preserve">
    <value>Small</value>
    <comment>Size option: Small.</comment>
  </data>
  <data name="Card_Size_Medium" xml:space="preserve">
    <value>Medium</value>
    <comment>Size option: Medium.</comment>
  </data>
  <data name="Card_Size_Large" xml:space="preserve">
    <value>Large</value>
    <comment>Size option: Large.</comment>
  </data>
  <data name="Card_Alignment_Display_Key" xml:space="preserve">
    <value>Alignment</value>
    <comment>The display name for the Card's Alignment property.</comment>
  </data>
  <data name="Card_Alignment_Desc_Key" xml:space="preserve">
    <value>Specifies the alignment of the card content (Vertical, Horizontal).</value>
    <comment>Description for the Card's Alignment property.</comment>
  </data>
  <data name="Card_Alignment_Vertical" xml:space="preserve">
    <value>Vertical</value>
    <comment>Alignment option: Vertical.</comment>
  </data>
  <data name="Card_Alignment_Horizontal" xml:space="preserve">
    <value>Horizontal</value>
    <comment>Alignment option: Horizontal.</comment>
  </data>
  <data name="Card_AutoHeight_Display_Key" xml:space="preserve">
    <value>Auto Height</value>
    <comment>The display name for the Card's AutoHeight property.</comment>
  </data>
  <data name="Card_AutoHeight_Desc_Key" xml:space="preserve">
    <value>Automatically adjusts the height based on content.</value>
    <comment>Description for the Card's AutoHeight property.</comment>
  </data>
  <data name="Card_Toolbar_Items_Display_Key" xml:space="preserve">
    <value>Toolbar Items</value>
    <comment>The display name for the toolbar items.</comment>
  </data>
  <data name="Card_Toolbar_Items_Desc_Key" xml:space="preserve">
    <value>Specifies the items in the toolbar and their configuration.</value>
    <comment>Description for toolbar items configuration.</comment>
  </data>
  <data name="Card_Toolbar_Layout" xml:space="preserve">
    <value>Toolbar Layout</value>
    <comment>The layout options for the toolbar.</comment>
  </data>
  <data name="Card_Toolbar_Layout_IconBefore" xml:space="preserve">
    <value>Icon Before</value>
    <comment>Layout option: Icon displayed before the text.</comment>
  </data>
  <data name="Card_Toolbar_Layout_IconAfter" xml:space="preserve">
    <value>Icon After</value>
    <comment>Layout option: Icon displayed after the text.</comment>
  </data>
  <data name="Card_Toolbar_Layout_IconAbove" xml:space="preserve">
    <value>Icon Above</value>
    <comment>Layout option: Icon displayed above the text.</comment>
  </data>
  <data name="Card_Toolbar_Layout_TextOnly" xml:space="preserve">
    <value>Text Only</value>
    <comment>Layout option: Display text only without an icon.</comment>
  </data>
  <data name="Card_Toolbar_Layout_IconOnly" xml:space="preserve">
    <value>Icon Only</value>
    <comment>Layout option: Display icon only without text.</comment>
  </data>
  <data name="Card_Actionable_Display_Key" xml:space="preserve">
    <value>Actionable</value>
    <comment>Actionable</comment>
  </data>
</root>